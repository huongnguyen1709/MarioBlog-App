{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/projects/EditProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","userId","userName","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorId","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deleteProject","getFirestore","doc","delete","catch","err","window","confirm","history","push","onDelete","onActionProject","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","createProject","add","Date","EditProject","editProject","nextProps","update","App","exact","path","component","ProjectDetails","Boolean","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bdfe38d7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Blog</NavLink></li>\r\n            <li><a onClick={props.signOut} >Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\">MarioBlog</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications, auth } = props\r\n    const onAuthor = (userId, userName) => {\r\n        if (auth.uid === userId) {\r\n            console.log('match')\r\n            return <span className=\"pink-text\">You </span>\r\n        } else {\r\n            return <span className=\"pink-text\">{userName} </span>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content pink lighten-4 text-darken-3\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    {onAuthor(item.userId, item.user)}\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"black-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project, auth }) => {\r\n\r\n    const onAuthor = () => {\r\n        if (auth.uid === project.authorId) {\r\n            return <p>Posted by You</p>\r\n        } else {\r\n            return <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content pink lighten-4 black-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                {onAuthor()}\r\n                <p className=\"black-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects, auth }) => {\r\n    return (\r\n        <div className=\"section\">\r\n\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} auth={auth} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <h6 className=\"pink lighten-4 center\">Share your story with us !</h6>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} auth={auth} />\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} auth={auth} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { deleteProject } from '../../store/actions/projectActions'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth, id } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    const onDelete = (id) => {\r\n        if (auth.uid === project.authorId) {\r\n            if (window.confirm('Are you sure you want to delete ?')) {\r\n                props.deleteProject(id)\r\n                props.history.push('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    const onActionProject = () => {\r\n        if (auth.uid === project.authorId) {\r\n            console.log('match')\r\n            return (\r\n                <div className=\"right\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0 right ml\" onClick={() => onDelete(id)}>Delete</button>\r\n                    <Link to={'/project/' + id + '/edit'} className=\"btn pink lighten-1 z-depth-0\" >Edit</Link>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n    const onAuthor = () => {\r\n        if (auth.uid === project.authorId) {\r\n            return <div>Posted by You</div>\r\n        } else {\r\n            return <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n        }\r\n    }\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content pink lighten-4 text-darken-3\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action pink lighten-3 text-darken-3\">\r\n                        {onAuthor()}\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n                <Link to='/' className=\"btn pink lighten-1 z-depth-0\">Back</Link>\r\n                {onActionProject()}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project ...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => { // ownProps là props của component, có thể lấy props.match\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n        id: id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project, // ...project make the object 'project' into the properties: title, content\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const editProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore.collection('projects').doc(project.id).update({\r\n            ...project\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'EDIT_PROJECT',\r\n                project\r\n            })\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: 'EDIT_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProject = (id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        firestore\r\n            .collection('projects')\r\n            .doc(id)\r\n            .delete()\r\n            .then(() => {\r\n                dispatch({\r\n                    type: 'DELETE_PROJECT',\r\n                    id\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: 'DELETE_PROJECT_ERROR',\r\n                    err\r\n                })\r\n            })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"pink lighten-4 text-darken-3\">\r\n                    <h5 className=\"red-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"black-text\">\r\n                        <span>Email: test@mario.com</span> <br />\r\n                        <span>Password: 123456</span>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"pink lighten-4 text-darken-3\">\r\n                    <h5 className=\"red-text\">Sign Up</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                    </div>\r\n\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/') //inside this component, we have access to route information on the props that happens automatically when we use the router\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"pink lighten-4 text-darken-3\">\r\n                    <h5>New Blog</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <Link to='/' className=\"btn pink lighten-1 z-depth-0 mt\">Back</Link>\r\n                        <button className=\"btn pink lighten-1 z-depth-0 right\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editProject } from '../../store/actions/projectActions'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass EditProject extends Component {\r\n    state = {\r\n        id: '',\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { id, project } = this.props\r\n        if (id && project) {\r\n            this.setState({\r\n                id: id,\r\n                title: project.title,\r\n                content: project.content\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { id, project } = nextProps\r\n        if (id && project) {\r\n            this.setState({\r\n                id: id,\r\n                title: project.title,\r\n                content: project.content\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { auth, project } = this.props\r\n        if (auth.uid === project.authorId) {\r\n            this.props.editProject(this.state)\r\n            this.props.history.push('/') //inside this component, we have access to route information on the props that happens automatically when we use the router\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { title, content } = this.state\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"cyan lighten-5 text-darken-3\">\r\n                    <h5>Edit Blog</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" className={title ? 'active' : null}>Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            value={title}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\" className={content ? 'active' : null}>Project Content</label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            className=\"materialize-textarea\"\r\n                            value={content}\r\n                            onChange={this.handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <Link to='/' className=\"btn pink lighten-1 z-depth-0 mt\">Back</Link>\r\n                        <button className=\"btn pink lighten-1 z-depth-0 right\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        auth: state.firebase.auth,\r\n        project: project,\r\n        id: id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editProject: (project) => dispatch(editProject(project))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(EditProject);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nimport EditProject from './components/projects/EditProject'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"App\">\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Dashboard} />\r\n                        <Route exact path='/project/:id' component={ProjectDetails} />\r\n                        <Route path='/signin' component={SignIn} />\r\n                        <Route path='/signup' component={SignUp} />\r\n                        <Route path='/create' component={CreateProject} />\r\n                        <Route path='/project/:id/edit' component={EditProject} />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        case 'EDIT_PROJECT':\r\n            console.log('edited project', action.project)\r\n            return state\r\n        case 'EDIT_PROJECT_ERROR':\r\n            console.log('edit project error', action.err)\r\n            return state\r\n        case 'DELETE_PROJECT':\r\n            console.log('deleted project', action.id)\r\n            return state\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('deleted project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore' // this reducer is made for syncing our firestore data with our state in the backround\r\nimport { firebaseReducer } from 'react-redux-firebase' // for taking the authencation status from firebase to our state\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAc1RHb0d9sTy_ntiewPLH7f2k-9EzE84Q\",\r\n    authDomain: \"marioplan-66b4a.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-66b4a.firebaseio.com\",\r\n    projectId: \"marioplan-66b4a\",\r\n    storageBucket: \"marioplan-66b4a.appspot.com\",\r\n    messagingSenderId: \"1002390649563\",\r\n    appId: \"1:1002390649563:web:d927c93796f8cdf13a2afe\",\r\n    measurementId: \"G-NDLKJ6V47C\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore()\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\n// useFirestoreForProfile means I want use Firebase Producer to use firestore, our database to sync to the profile object on the state have in firebase state\n// attachAuthIsReady, firebaseAuthIsReady dùng để chờ cho kết nối được với firebase rồi mới render page\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n  serviceWorker.unregister();\n})"],"sourceRoot":""}